#!/usr/bin/env tsx

import { cedictService } from '../services/cedictService';

async function testCedictService() {
  console.log('üß™ Testing CEDICT Service...\n');

  try {
    // Load the dictionary
    await cedictService.loadDictionary();
    
    // Get stats
    const stats = cedictService.getStats();
    console.log(`üìö Dictionary loaded: ${stats.loaded}`);
    console.log(`üìä Total entries: ${stats.totalEntries}\n`);

    // Test some common words and characters
    const testWords = ['‰Ω†Â•Ω', 'Êàë', 'Â•Ω', 'Ë∞¢Ë∞¢', '‰ªÄ‰πà', 'ÂêçÂ≠ó', '‰∏≠ÂõΩ', 'Â≠¶Áîü', 'ËÄÅÂ∏à'];
    
    console.log('üîç Testing translations for common words and characters:');
    testWords.forEach(word => {
      const translation = cedictService.getTranslation(word);
      const pinyin = cedictService.getPinyin(word);
      console.log(`  ${word}: ${translation || 'NOT FOUND'} (${pinyin || 'no pinyin'})`);
    });

    // Test vocabulary enhancement
    console.log('\nüîß Testing vocabulary enhancement:');
    const sampleVocabulary = [
      { chinese: '‰Ω†Â•Ω', english: 'hello' },
      { chinese: 'Êàë', english: 'I/me' },
      { chinese: 'Â•Ω', english: 'good/well' },
      { chinese: 'Ë∞¢Ë∞¢', english: 'thank you' },
      { chinese: '‰∏çÂ≠òÂú®ÁöÑËØç', english: 'non-existent word' }
    ];

    const enhancedVocab = cedictService.enhanceVocabulary(sampleVocabulary);
    
    console.log('Original ‚Üí Enhanced:');
    sampleVocabulary.forEach((original, index) => {
      const enhanced = enhancedVocab[index];
      const changed = original.english !== enhanced.english ? ' ‚ú®' : '';
      console.log(`  ${original.chinese}: "${original.english}" ‚Üí "${enhanced.english}"${changed}`);
    });

    // Test comprehensive vocabulary extraction (characters + words)
    console.log('\nüéØ Testing comprehensive vocabulary extraction from content:');
    const sampleContent = {
      chinese: '‰Ω†Â•ΩÔºÅÊàëÂæàÂ•ΩÔºåË∞¢Ë∞¢‰Ω†„ÄÇÊàëÊòØ‰∏≠ÂõΩ‰∫∫„ÄÇ',
      sentences: [
        { chinese: '‰Ω†Â•ΩÔºÅ' },
        { chinese: 'ÊàëÂæàÂ•ΩÔºåË∞¢Ë∞¢‰Ω†„ÄÇ' },
        { chinese: 'ÊàëÊòØ‰∏≠ÂõΩ‰∫∫„ÄÇ' }
      ]
    };

    const extractedVocab = cedictService.extractVocabularyFromContent(sampleContent);
    console.log('Extracted vocabulary (Characters + Words):');
    console.log('Characters:');
    extractedVocab.filter(v => v.type === 'character').forEach(item => {
      console.log(`  ${item.chinese}: ${item.english}`);
    });
    console.log('Words:');
    extractedVocab.filter(v => v.type === 'word').forEach(item => {
      console.log(`  ${item.chinese}: ${item.english}`);
    });

    // Test expanded lesson vocabulary
    console.log('\nüìö Testing expanded lesson vocabulary:');
    const expandedVocab = cedictService.expandLessonVocabulary(sampleContent, sampleVocabulary);
    console.log(`Original: ${sampleVocabulary.length}, Expanded: ${expandedVocab.length} items`);
    console.log('Expanded vocabulary:');
    expandedVocab.forEach(item => {
      const typeLabel = item.type ? `(${item.type})` : '(original)';
      console.log(`  ${item.chinese}: ${item.english} ${typeLabel}`);
    });

    console.log('\n‚úÖ CEDICT Service test completed successfully!');

  } catch (error) {
    console.error('‚ùå Test failed:', error);
    process.exit(1);
  }
}

// Run the test
testCedictService();